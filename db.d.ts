/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType, Genearated } from "kysely";

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type Numeric = ColumnType<string, number | string, number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AccountPlans {
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<number>;
  is_active: Generated<boolean>;
  is_default: Generated<boolean>;
  is_deleted: Generated<boolean>;
  label: string;
  plan: Generated<Json>;
  price_monthly: Numeric | null;
  price_yearly: Numeric | null;
  updated_at: Generated<Timestamp>;
}

export interface AccountProviders {
  access_token: string | null;
  account_id: number;
  expires_at: Timestamp | null;
  id: Generated<number>;
  id_token: string | null;
  provider_account_id: string;
  refresh_token: string | null;
  scope: string | null;
  session_state: string | null;
  token_type: string | null;
  type: string;
}

export interface AccountRoles {
  created_at: Generated<Timestamp>;
  description: string | null;
  id: Generated<number>;
  is_active: Generated<boolean>;
  is_default: Generated<boolean>;
  is_deleted: Generated<boolean>;
  label: string;
  updated_at: Generated<Timestamp>;
}

export interface Accounts {
  account_plan_id: number;
  created_at: Generated<Timestamp>;
  email: string;
  email_verified: Generated<boolean>;
  first_name: string | null;
  id: Generated<number>;
  is_deleted: Generated<boolean>;
  last_name: string | null;
  login_attempts: Generated<number>;
  login_last: Timestamp | null;
  login_locked_until: Timestamp | null;
  middle_name: string | null;
  password: Buffer | null;
  salt: Buffer | null;
  updated_at: Generated<Timestamp>;
  username: string | null;
}

export interface AccountsRoles {
  account_id: number;
  account_role_id: number;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  updated_at: Generated<Timestamp>;
}

export interface AssetClasses {
  active: Generated<boolean>;
  code: string;
  created_at: Generated<Timestamp>;
  deleted: Generated<boolean>;
  id: Generated<number>;
  name: string;
  updated_at: Generated<Timestamp>;
}

export interface Locales {
  active: Generated<boolean>;
  code: string;
  created_at: Generated<Timestamp>;
  deleted: Generated<boolean>;
  id: Generated<number>;
  name: string;
  updated_at: Generated<Timestamp>;
}

export interface Markets {
  active: Generated<boolean>;
  code: string;
  created_at: Generated<Timestamp>;
  deleted: Generated<boolean>;
  id: Generated<number>;
  name: string;
  updated_at: Generated<Timestamp>;
}

export interface Sessions {
  expire: Timestamp;
  sess: Generated<Json>;
  sid: string;
}

export interface Tickers {
  active: Generated<boolean>;
  cik: number;
  composite_figi: string;
  created_at: Generated<Timestamp>;
  currency_name: string;
  deleted: Generated<boolean>;
  delisted: Timestamp | null;
  id: Generated<number>;
  last_updated: Timestamp;
  locale_id: number;
  market_id: number;
  name: string;
  primary_exchange: string;
  ticker: string;
  ticker_type_id: number;
  updated_at: Generated<Timestamp>;
}

export interface TickerTypes {
  active: Generated<boolean>;
  asset_class_id: number;
  code: string;
  created_at: Generated<Timestamp>;
  deleted: Generated<boolean>;
  description: string;
  id: Generated<number>;
  locale_id: number;
  updated_at: Generated<Timestamp>;
}

export interface DB {
  account_plans: AccountPlans;
  account_providers: AccountProviders;
  account_roles: AccountRoles;
  accounts: Accounts;
  accounts_roles: AccountsRoles;
  asset_classes: AssetClasses;
  locales: Locales;
  markets: Markets;
  sessions: Sessions;
  ticker_types: TickerTypes;
  tickers: Tickers;
}
